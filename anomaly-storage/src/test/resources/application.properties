spring.cloud.stream.binders.kafka.type=kstream
spring.cloud.stream.binders.kafka.environment.spring.cloud.stream.kafka.streams.binder.brokers=localhost:29092
spring.kafka.streams.properties.spring.json.use.type.headers=false
spring.cloud.stream.kafka.streams.binder.deserialization-exception-handler=logandcontinue

spring.cloud.stream.function.definition=anomalyDetectorProcessor

spring.cloud.stream.kafka.streams.binder.functions.anomalyDetectorProcessor.application-id=anomaly-detector
spring.cloud.stream.bindings.anomalyDetectorProcessor-in-0.content-type=application/json
spring.cloud.stream.bindings.anomalyDetectorProcessor-in-0.destination=temperature-measurements
spring.cloud.stream.bindings.anomalyDetectorProcessor-in-0.binder=kafka

spring.cloud.stream.bindings.anomalyDetectorProcessor-out-0.content-type=application/json
spring.cloud.stream.bindings.anomalyDetectorProcessor-out-0.destination=temperature-anomalies
spring.cloud.stream.bindings.anomalyDetectorProcessor-out-0.binder=kafka

kafka.server=localhost:29092
kafka.group-id=anomaly-storage
kafka.topic=temperature-anomalies

spring.datasource.url=jdbc:postgresql://localhost:5432/anomalies
spring.datasource.username=postgres
spring.datasource.password=root
spring.jpa.show-sql=true
spring.jpa.defer-datasource-initialization=true
spring.datasource.driver.class-name=org.postgresql.Driver

## Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = update